{"pageProps":{"note":{"id":"4NGNjoO5EN2NEwQa","title":"First Oss Contribution","vault":{"fsPath":"vault"},"type":"note","desc":"","links":[],"anchors":{"dendron":{"type":"header","value":"dendron","line":11,"column":0},"useful-links":{"type":"header","value":"useful-links","line":16,"column":0},"commit-conventions":{"type":"header","value":"commit-conventions","line":19,"column":0},"notes":{"type":"header","value":"notes","line":29,"column":0}},"fname":"daily.journal.archive.first-oss-contribution","updated":1627957359756,"created":1627957290508,"parent":"8j1xOwQheo23q9GA","children":[],"data":{},"contentHash":"f76336a60cd3fb97ca8af05696d7ac0b","custom":{}},"body":"<h1 id=\"first-oss-contribution\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#first-oss-contribution\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>First Oss Contribution</h1>\n<blockquote>\n<p>This is an archived journal of my first OSS contribution. Keeping it in archive as it spans multiple days and was a major turning point in my career (ended up working for the project full time).</p>\n</blockquote>\n<h1 id=\"dendron\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#dendron\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Dendron</h1>\n<p><a href=\"dendron.so\">Website</a></p>\n<h2 id=\"useful-links\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#useful-links\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Useful links</h2>\n<p><a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">Your First Extension</a></p>\n<h2 id=\"commit-conventions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#commit-conventions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Commit conventions</h2>\n<ul>\n<li>follow <a href=\"https://www.conventionalcommits.org/en/v1.0.0/\">conventional commits</a> with the following tags</li>\n<li>categories:\n<ul>\n<li>feat: feature - introduce new functionality</li>\n<li>enhance: enhancement - improve existing functionality</li>\n<li>fix: make something not broken</li>\n<li>chore: backend improvements</li>\n<li>spike: not complete commi</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"notes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#notes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Notes</h2>\n<p><strong>2021-01-06</strong></p>\n<ul>\n<li>Grabbed my first issue a few days ago.</li>\n<li>Seems I need a bit of ts/js + VSCode extension development primer so I've been on that for the last few days</li>\n<li>First going through <a href=\"https://www.typescriptlang.org/docs/handbook/\">the typescript handbook</a> to get myself familiar with typescript.</li>\n<li><a href=\"https://www.kevinslin.com/\">Kevin</a> has kindly offered help to get me started with contributing. The community is very welcoming to newcomers.</li>\n</ul>\n<p><strong>2021-01-11</strong></p>\n<ul>\n<li>Scheduled a pairing sessions on 2021-01-13 7:30AM. </li>\n</ul>\n<p><a href=\"https://dendron.so/notes/c84aa95c-83b9-4d52-90a1-eeec8f0ca84f.html\">Writing Tests</a></p>\n<ul>\n<li>\n<p>consider both single vault and multi-vault scenario.</p>\n<ul>\n<li><code>runLegacySingleWorkspaceTest</code></li>\n<li><code>runLegacyMultiWorkspaceTest</code></li>\n<li>These set up mocks for single/multi vault testing.\n<ul>\n<li>example : <a href=\"https://github.com/dendronhq/dendron/blob/master/packages/plugin-core/src/test/suite-integ/RenameNoteV2.test.ts#L131:L131\">RenameNoteV2.test.ts</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/dendronhq/dendron/blob/master/packages/plugin-core/src/test/testUtilsV3.ts#L70:L70\">arguments</a>\n<ul>\n<li><code>ctx</code>\n<ul>\n<li><a href=\"https://code.visualstudio.com/api/references/vscode-api#ExtensionContext\">vscode extension context</a></li>\n<li>collection of utilities private to an extension</li>\n</ul>\n</li>\n<li><code>preSetupHook</code>\n<ul>\n<li>runs before init</li>\n</ul>\n</li>\n<li><code>postSetupHook</code>\n<ul>\n<li>runs after init</li>\n</ul>\n</li>\n<li><code>preActivateHook</code>\n<ul>\n<li>runs befor workspace activation</li>\n</ul>\n</li>\n<li><code>postActivateHook</code>\n<ul>\n<li></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://github.com/dendronhq/dendron/blob/58b3587f1e44f54635f77f7395f7b756f18e0c84/packages/common-test-utils/src/utils.ts#L119\">runJestHarnessV2</a></p>\n<ul>\n<li>use shimmed jest methods to assert equality of actual and expected test outcome.</li>\n</ul>\n</li>\n<li>\n<p>engine test setup</p>\n<ol>\n<li>initialize engine</li>\n<li>seed it with fixtures for testing</li>\n</ol>\n<ul>\n<li>may require testing in multiple environments (plugin, CLI, server, engine)</li>\n<li>may require multiple test runners (jest / mocha)</li>\n</ul>\n</li>\n</ul>\n<p><strong>2021-01-14</strong></p>\n<p><em>Notes on pairing session</em></p>\n<p>Session goal</p>\n<ul>\n<li>Add a test for MarkdownPublishPod</li>\n<li>Show how tests are set up for Dendron</li>\n</ul>\n<p>watch</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> bootstrap/scripts\n./watch.sh\n</code></pre>\n<ul>\n<li>Dendron is made up of a multiple typescript projects</li>\n<li>This script will watch all of them and compile them when you make change to the code.</li>\n</ul>\n<p>Testing in Dendron</p>\n<ul>\n<li>All tests are managed with jest.\n<ul>\n<li>Except the plugin itself, which uses mocha\n<ul>\n<li>mocha is very well integrated into VSCode's <a href=\"https://en.wikipedia.org/wiki/Test_harness\">test harness</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Any test code that are not testing plugin functionality are\n<ul>\n<li>located in the <code>__tests__</code> directory</li>\n<li>in the file name formatted <code>TestName.spec.ts</code></li>\n</ul>\n</li>\n<li>To run a test, use VSCode tasks\n<ul>\n<li><code>cmd</code> + <code>shift</code> + <code>p</code>, -> <code>Task: Run Task</code> in the command palette</li>\n<li>Select the appropriate task to run.\n<ul>\n<li>These are vscode wrappers around bash scripts.</li>\n</ul>\n</li>\n<li>In our case, we want to test <code>MarkdownPod.spec.ts</code></li>\n<li>Type <code>npm:test:watch</code> in the task comman palette</li>\n<li>There will be a number of selections, marked with which project's test it will be running.\n<ul>\n<li>Select the one marked with <code>pods-core</code>, as we are testing pods today.</li>\n</ul>\n</li>\n<li>This will open a terminal and run <code>jest --watch</code> on the specific test we are interested in.\n<ul>\n<li>Now jest will run all the tests for you every time you change your test code</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Writing new tests\n<ul>\n<li>Start a new <a href=\"https://jestjs.io/docs/en/api#describename-fn\">describe block</a>, and give it an appropriate name.</li>\n<li>Write a new test case.\n<ul>\n<li>Use <code>runEngineTest</code>\n<ul>\n<li>Multiple versions of this exists</li>\n<li>Make sure you import the right version of this.\n<ul>\n<li>This is a typescript thing (?)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>There are preset scenarios for testing\n<ul>\n<li>These are <code>PreSetupHookFunctions</code></li>\n<li>They set up hard-coded notes in a vault so that they can be used in a test</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Quick jest tip: use snapshots to grab a test result (something long that you don't really want to construct manually), and use that for your assertions\n<ul>\n<li>These can be found in <code>__tests__/__snapshots__</code></li>\n<li>Don't forget to remove the snapshot code for the final test code if it isn't necessary.</li>\n</ul>\n</li>\n<li>Clean up any unused code / warnings</li>\n</ul>\n</li>\n<li>After writing all the tests, check again by running the entire test suite\n<ul>\n<li>Run <code>Test: bootstrap</code> found under <code>Task: Run Task</code>\n<ul>\n<li>This will all tests in all packages.</li>\n<li>We want to do this before commiting because Dendron is a mono-repo, and most packages have dependencies on each other.</li>\n<li>We want to make sure our changes aren't breaking something elsewhere.</li>\n<li>Github action that will automatically do this for every push will be coming soon.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>If you want to be more careful, you can also test the plugin itself at this point.\n<ul>\n<li>The above step tests every single package that is not a plugin.</li>\n<li>To run tests for the plugin itself, run <code>Extension Integ Tests (plugin-core)</code>, which can be found in the Run pane.</li>\n</ul>\n</li>\n</ul>\n<p><strong>2021-01-20 9:19 PM</strong></p>\n<ul>\n<li>What is <code>MarkdownPublishPod</code> (and the new markdown parser) actually doing?\n<ul>\n<li>get note, given the file name.</li>\n<li>get processor (?)</li>\n<li>process given representation of a file(note.body) as configured on the processor</li>\n</ul>\n</li>\n</ul>\n<p><strong>2021-01-24 5:33 PM</strong></p>\n<ul>\n<li>Some test cases to think about for <code>MarkdownPublishPod</code>\n<ul>\n<li>empty note</li>\n<li>note with links\n<ul>\n<li>wikilink</li>\n<li>relative link</li>\n</ul>\n</li>\n<li>note with reference\n<ul>\n<li>note reference</li>\n<li>block reference</li>\n<li>block range reference</li>\n<li>reference offset</li>\n<li>wildcard header reference</li>\n<li>wildcard child reference</li>\n<li>wildcard complex reference (child, then header, then offset)</li>\n<li><del>recursive reference</del></li>\n</ul>\n</li>\n<li><del>note with tags?</del>\n<ul>\n<li>tags are just regular notes.</li>\n</ul>\n</li>\n<li><del>note with katex?</del>\n<ul>\n<li>not markdown</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>2021-01-25 12:17 AM</strong></p>\n<ul>\n<li>pushed revised tests for <code>MarkdownPublishPod</code></li>\n<li>not sure what the best way to structure tests would be\n<ol>\n<li>bundle tests that are testing similar functionality into one test block</li>\n<li>have them all separate.</li>\n</ol>\n</li>\n</ul>\n<p><strong>2021-01-30 3:40 PM</strong></p>\n<ul>\n<li>decided to pick up <a href=\"https://github.com/dendronhq/dendron/issues/410\">#410</a></li>\n<li>currently <code>selectionExtract</code> will delete the text selected text from the original location even if the file is not part of the vault. This is might not be desirable.</li>\n<li>As-is\n<ul>\n<li>delete extracted text from file regardless.</li>\n</ul>\n</li>\n<li>To-be\n<ul>\n<li>check if the document we are extracting from is from the same vault.\n<ul>\n<li>If it is, delete extracted text.</li>\n<li>otherwise, don't</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>2021-01-30 8:41 PM</strong></p>\n<ul>\n<li>looks like nobody is working on this issue. will pick up.</li>\n<li>not sure if I should use <code>getByVaultPath</code> or <code>getVaultByNotePathV4</code>\n<ul>\n<li><code>getByVaultPath</code> is marked <a title=\"Private\" style=\"color: brown\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\">@deprecated (Private)</a>, but is still in use in one place</li>\n<li><code>getVaultByNotePathV4</code>\n<ul>\n<li>using this against a non-vault file will raise an exception.</li>\n<li>is using a try/catch block for control flow something people do in js/ts?</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>2021-02-13 9:38 PM</strong></p>\n<ul>\n<li>picking up a mid sized task. <a href=\"https://github.com/dendronhq/dendron/issues/446\">#466</a></li>\n<li>should implement a FoldingRangeProvider for frontmatter.</li>\n</ul>\n<p><strong>2021-03-08 6:15 AM</strong></p>\n<ul>\n<li><code>selectionExtract</code> test case considerations</li>\n<li>test both single and multi vault (known)</li>\n<li>basic\n<ul>\n<li>extracts selected text correctly</li>\n<li>removes from original note</li>\n</ul>\n</li>\n<li>useless?\n<ul>\n<li>nothing is selected\n<ul>\n<li>should just create empty note</li>\n</ul>\n</li>\n<li>only whitespace is selected\n<ul>\n<li>should just create empty note but cursor will go to the bottom</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>This is a pretty straightforward feature. Can't seem to come up with a case that is intrinsic to <code>selectionExtract</code></li>\n<li>Adding basic tests for single/multi vault and calling it done.</li>\n</ul>","noteIndex":{"id":"919a3a68-d78d-4403-aca5-ea6e722ca35b","title":"Cerebrarium","vault":{"fsPath":"vault"},"type":"note","desc":"","links":[{"type":"wiki","from":{"fname":"cerebrarium","id":"919a3a68-d78d-4403-aca5-ea6e722ca35b","vaultName":"vault"},"value":"cerebrarium.pkm.para","alias":"PARA","position":{"start":{"line":15,"column":12,"offset":749},"end":{"line":15,"column":41,"offset":778},"indent":[]},"xvault":false,"to":{"fname":"cerebrarium.pkm.para"}},{"type":"wiki","from":{"fname":"cerebrarium","id":"919a3a68-d78d-4403-aca5-ea6e722ca35b","vaultName":"vault"},"value":"cerebrarium.pkm.zettelkasten","alias":"Zettelkasten","position":{"start":{"line":15,"column":46,"offset":783},"end":{"line":15,"column":91,"offset":828},"indent":[]},"xvault":false,"to":{"fname":"cerebrarium.pkm.zettelkasten"}},{"from":{"fname":"ext","vaultName":"vault"},"type":"backlink","position":{"start":{"line":40,"column":87,"offset":2834},"end":{"line":40,"column":102,"offset":2849},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"ext","vaultName":"vault"},"type":"backlink","position":{"start":{"line":42,"column":99,"offset":3059},"end":{"line":42,"column":114,"offset":3074},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"inbox.do","vaultName":"vault"},"type":"backlink","position":{"start":{"line":6,"column":31,"offset":157},"end":{"line":6,"column":46,"offset":172},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"proj.mhc-housekeeping","vaultName":"vault"},"type":"backlink","position":{"start":{"line":23,"column":86,"offset":610},"end":{"line":23,"column":101,"offset":625},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"proj.set-up-para","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":46,"offset":86},"end":{"line":5,"column":61,"offset":101},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.07.06","vaultName":"vault"},"type":"backlink","position":{"start":{"line":23,"column":19,"offset":1162},"end":{"line":23,"column":34,"offset":1177},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.07.06","vaultName":"vault"},"type":"backlink","position":{"start":{"line":26,"column":30,"offset":1483},"end":{"line":26,"column":45,"offset":1498},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.07.06","vaultName":"vault"},"type":"backlink","position":{"start":{"line":31,"column":19,"offset":1886},"end":{"line":31,"column":34,"offset":1901},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.07.10","vaultName":"vault"},"type":"backlink","position":{"start":{"line":7,"column":22,"offset":259},"end":{"line":7,"column":37,"offset":274},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.07.10","vaultName":"vault"},"type":"backlink","position":{"start":{"line":24,"column":39,"offset":1347},"end":{"line":24,"column":54,"offset":1362},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.07.11","vaultName":"vault"},"type":"backlink","position":{"start":{"line":4,"column":22,"offset":102},"end":{"line":4,"column":37,"offset":117},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"daily.journal.2021.08.03","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":114,"offset":270},"end":{"line":5,"column":129,"offset":285},"indent":[]},"value":"cerebrarium"}],"anchors":{"cerebrarium":{"type":"header","value":"cerebrarium","line":10,"column":0}},"fname":"cerebrarium","updated":1624778759593,"created":1608971683570,"parent":null,"children":["f52825ef-7efe-4373-9784-255b9a058deb","815d5e1b-44ea-476a-868d-5fada4342924","65cb4031-d3d3-4e1a-a295-b96693df9d52","fc872c52-b139-4f32-80d5-9fcf05b41621","Jytev4B6USaFF48P","e6765163-38b4-42eb-a122-0d8ccca6ae22","ZtihdRyqFJMCdlVjMPuZj"],"data":{},"contentHash":"2aec5069849c7e32c9b0e6767c70dca7","custom":{"nav_order":0,"permalink":"/"},"body":"\n![](/assets/images/2020-12-20-14-44-18.png)\n\n# Cerebrarium\n\n> **Where I sow my cerebral seeds and tend to them.**\n\nThis is my current attempt to _**actively consume**_ information,\nand also try to travel back in time and excavate what I have been dumping into my head without any consideration.\n\nMost of the documents here will not make sense as they are working copies of my projects and ideas. This page is the entrypoint to my thoughts but there isn't a clearly sorted order of navigation. I simply decided to share these publicly to facilitate easy sharing and _**thinking out loud**_\n\nI plan to keep more polished and complete posts in my [main website](https://markhyunikchoi.com) and use this place as a nursery for my thoughts.\n\nThis is my [[PARA|cerebrarium.pkm.para]], my [[Zettelkasten|cerebrarium.pkm.zettelkasten]], my second brain. This is my Eudaimonia Machine. This is my kitchen-sink-crucible of tools that hopefully helps me think better. \n","schema":{"schemaId":"cerebrarium","moduleId":"cerebrarium"}},"collectionChildren":null,"customHeadContent":null,"config":{"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enableLinkCandidates":true,"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["cerebrarium","ext","inbox","daily","proj"],"siteRootDir":"docs","usePrettyRefs":true,"gh_edit_repository":"https://github.com/hikchoi/cerebrarium","logo":"vault/assets/images/2020-12-20-14-44-18.png","siteFaviconPath":"vault/assets/images/favicon.ico","siteUrl":"https://cerebrarium.garden","githubCname":"cerebrarium.garden","title":"cerebrarium","author":"hikchoi","description":"Personal knowledge space","siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"cerebrarium"},"version":4,"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"selection","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false}},"workspace":{"dendronVersion":"0.71.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"","dateFormat":"y.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"childOfCurrent"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableEditorDecorations":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false}}},"__N_SSG":true}