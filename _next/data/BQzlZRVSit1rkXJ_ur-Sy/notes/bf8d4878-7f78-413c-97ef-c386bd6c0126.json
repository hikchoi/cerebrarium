{"pageProps":{"note":{"id":"bf8d4878-7f78-413c-97ef-c386bd6c0126","title":"Variable","vault":{"fsPath":"vault"},"type":"note","desc":"","links":[{"from":{"fname":"ref.dev.lang.js","id":"3b017f65-fc19-48e0-a1fc-33e1b89a3621","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":3,"offset":27},"end":{"line":5,"column":52,"offset":76},"indent":[]},"value":"ref.dev.lang.js.variable"}],"anchors":{"variable-declaration":{"type":"header","value":"variable-declaration","line":8,"column":0}},"fname":"ref.dev.lang.js.variable","updated":1609659555385,"created":1609659548420,"parent":"3b017f65-fc19-48e0-a1fc-33e1b89a3621","children":[],"data":{},"contentHash":"700ba046369f81551ea67e8e4cdb6e36","custom":{}},"body":"<h1 id=\"variable\">Variable<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#variable\"></a></h1>\n<h1 id=\"variable-declaration\">Variable Declaration<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#variable-declaration\"></a></h1>\n<ul>\n<li><code>var</code> has weird scoping rules\n<ul>\n<li>It is accessible anywhere within their containing scope regardless of the containing block.\n<ul>\n<li>It's not an error to declare the same variable multiple times</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>let</code>, unlike <code>var</code>, uses lexical scoping.\n<ul>\n<li>the variable scope doesn't leak now.</li>\n</ul>\n</li>\n<li>Shadowing : introducing a new name in a more nested scope</li>\n<li><code>let</code> or <code>const</code>? \n<ul>\n<li>Depends. Apply the principle of least privilege.</li>\n</ul>\n</li>\n<li>Destructuring\n<ul>\n<li>ECMAScript 2015 feature</li>\n<li>e.g.\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code></pre>\n</li>\n<li>equivalent to indexing.</li>\n<li>use <code>...</code> for remaining items (they can be omitted if you don't need them.)\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>rest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 3, 4]</span>\n</code></pre>\n</li>\n<li>also works with objects\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> o<span class=\"token punctuation\">;</span>\n</code></pre>\n</li>\n<li>type annotation with destructuring is confusing:\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> b<span class=\"token punctuation\">;</span> number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> o<span class=\"token punctuation\">;</span>\n</code></pre>\n</li>\n<li>destructuring with default values\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// b? means b is optional</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">o</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> b<span class=\"token operator\">?</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// give default value of b since it is optional</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> o\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>function declaration with destructuring\n<pre class=\"language-js\"><code class=\"language-js\">type <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> b<span class=\"token operator\">?</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token constant\">C</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//..</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>Anything but a simple destructuring gets extremely confusing. Use sparingly.</li>\n</ul>\n</li>\n<li>Spreading\n<ul>\n<li>opposite of destructuring\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> first <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> second <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> both <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>first<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>second<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [0, 1, 2, 3, 4, 5]</span>\n</code></pre>\n</li>\n<li>also works with objects\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> defaults <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">food</span><span class=\"token operator\">:</span> <span class=\"token string\">\"spicy\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$$\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ambiance</span><span class=\"token operator\">:</span> <span class=\"token string\">\"noisy\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> search <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span>defaults<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">food</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rich\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// properties coming later in the spread object overwrites.</span>\n</code></pre>\n</li>\n<li>with object spreading, you lose methods.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/3b017f65-fc19-48e0-a1fc-33e1b89a3621\">Js</a></li>\n</ul>","noteIndex":{"id":"919a3a68-d78d-4403-aca5-ea6e722ca35b","title":"Cerebrarium","desc":"","updated":1640613661592,"created":1608971683570,"custom":{"nav_order":0,"permalink":"/"},"fname":"cerebrarium","type":"note","vault":{"fsPath":"vault"},"contentHash":"608b5806f5a9617a1356f40276dc6043","links":[{"from":{"fname":"ext","id":"Y_H6rBwXIinOO1QtrsNLV","vaultName":"vault"},"type":"backlink","position":{"start":{"line":40,"column":87,"offset":2834},"end":{"line":40,"column":102,"offset":2849},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"ext","id":"Y_H6rBwXIinOO1QtrsNLV","vaultName":"vault"},"type":"backlink","position":{"start":{"line":42,"column":99,"offset":3059},"end":{"line":42,"column":114,"offset":3074},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"inbox.do","id":"sKXyyWh2Ltz34Yor","vaultName":"vault"},"type":"backlink","position":{"start":{"line":6,"column":31,"offset":157},"end":{"line":6,"column":46,"offset":172},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.proj.set-up-para","id":"3e110afd-f3d7-4e65-a6a2-68386e385830","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":46,"offset":86},"end":{"line":5,"column":61,"offset":101},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.07.06","id":"YkY2M2OBrECDzy7tJUm8u","vaultName":"vault"},"type":"backlink","position":{"start":{"line":23,"column":19,"offset":1162},"end":{"line":23,"column":34,"offset":1177},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.07.06","id":"YkY2M2OBrECDzy7tJUm8u","vaultName":"vault"},"type":"backlink","position":{"start":{"line":26,"column":30,"offset":1483},"end":{"line":26,"column":45,"offset":1498},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.07.06","id":"YkY2M2OBrECDzy7tJUm8u","vaultName":"vault"},"type":"backlink","position":{"start":{"line":31,"column":19,"offset":1886},"end":{"line":31,"column":34,"offset":1901},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.07.10","id":"PiWkMf8_aK-TI3h1foE9t","vaultName":"vault"},"type":"backlink","position":{"start":{"line":7,"column":22,"offset":259},"end":{"line":7,"column":37,"offset":274},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.07.10","id":"PiWkMf8_aK-TI3h1foE9t","vaultName":"vault"},"type":"backlink","position":{"start":{"line":24,"column":39,"offset":1355},"end":{"line":24,"column":54,"offset":1370},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.07.11","id":"voYNbQ3CnDingwFbsRjsG","vaultName":"vault"},"type":"backlink","position":{"start":{"line":4,"column":22,"offset":102},"end":{"line":4,"column":37,"offset":117},"indent":[]},"value":"cerebrarium"},{"from":{"fname":"archive.daily.journal.2021.08.03","id":"gPOBTIoz1O5t9BrS","vaultName":"vault"},"type":"backlink","position":{"start":{"line":5,"column":114,"offset":270},"end":{"line":5,"column":129,"offset":285},"indent":[]},"value":"cerebrarium"}],"anchors":{"cerebrarium":{"type":"header","text":"Cerebrarium","value":"cerebrarium","line":10,"column":0,"depth":1}},"children":["f52825ef-7efe-4373-9784-255b9a058deb","815d5e1b-44ea-476a-868d-5fada4342924","jARgLS1htcLm5h3qdnuC8","65cb4031-d3d3-4e1a-a295-b96693df9d52","fc872c52-b139-4f32-80d5-9fcf05b41621","Jytev4B6USaFF48P","e6765163-38b4-42eb-a122-0d8ccca6ae22","ZtihdRyqFJMCdlVjMPuZj"],"parent":null,"data":{},"body":"\n![](/assets/images/2020-12-20-14-44-18.png)\n\n# Cerebrarium\n\n> **Where I sow my cerebral seeds and tend to them.**\n\nThis is my current attempt to _**actively consume**_ information,\nand also try to travel back in time and excavate what I have been dumping into my head without any consideration.\n\nMost of the documents here will not make sense as they are working copies of my projects and ideas. This page is the entrypoint to my thoughts but there isn't a clearly sorted order of navigation. I simply decided to share these publicly to facilitate easy sharing and _**thinking out loud**_\n\nI plan to keep more polished and complete posts in my [main website](https://markhyunikchoi.com) and use this place as a nursery for my thoughts.\n","schema":{"schemaId":"cerebrarium","moduleId":"cerebrarium"}},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enableLinkCandidates":true,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"alwaysPrompt","fuzzThreshold":0.1}},"randomNote":{},"insertNoteLink":{"aliasMode":"prompt","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.92.1","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"","dateFormat":"y.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"childOfCurrent"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableEditorDecorations":true,"workspaceVaultSyncMode":"sync","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"enableUserTags":true,"enableHashTags":true,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["cerebrarium","ext","ref","proj"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"cerebrarium","description":"Personal knowledge space","author":"hikchoi"},"github":{"cname":"cerebrarium.garden","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/hikchoi/cerebrarium"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableHierarchyDisplay":false,"logoPath":"vault/assets/images/2020-12-20-14-44-18.png","siteFaviconPath":"vault/assets/images/favicon.ico","siteUrl":"https://cerebrarium.garden","siteIndex":"cerebrarium"}}},"__N_SSG":true}